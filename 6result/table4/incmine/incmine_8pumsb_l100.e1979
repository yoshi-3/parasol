Intel MPI 2017u2

{M}assive {O}nline {A}nalysis
Version: 12.08 August 2012
Copyright: (C) 2007-2012 University of Waikato, Hamilton, New Zealand
Web: http://moa.cs.waikato.ac.nz/

- 0.00s [running] Training learner...                                          \ 0.93s [running] 0.18% Training learner...                                    | 1.81s [running] 0.18% Training learner...                                    / 2.70s [running] 0.18% Training learner...                                    - 3.58s [running] 0.18% Training learner...                                    \ 4.58s [running] 0.18% Training learner...                                    | 4.76s [running] 0.18% Training learner...                                    / 5.76s [running] 0.18% Training learner...                                    - 6.77s [running] 0.18% Training learner...                                    \ 6.77s [running] 0.18% Training learner...                                    | 7.77s [running] 0.18% Training learner...                                    / 8.13s [running] 0.18% Training learner...                                    - 9.10s [running] 0.18% Training learner...                                    \ 9.65s [running] 0.18% Training learner...                                    | 10.06s [running] 0.18% Training learner...                                   / 10.15s [running] 0.18% Training learner...                                   - 10.16s [running] 0.18% Training learner...                                   \ 10.16s [running] 0.18% Training learner...                                                                                                                  
Task failed. Reason: 
java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.util.HashMap.resize(HashMap.java:703)
	at java.util.HashMap.putVal(HashMap.java:628)
	at java.util.HashMap.put(HashMap.java:611)
	at java.util.HashSet.add(HashSet.java:219)
	at java.util.AbstractCollection.addAll(AbstractCollection.java:344)
	at java.util.HashSet.<init>(HashSet.java:119)
	at Charm_BitSet.AlgoCharm_Bitset.getCandidate(AlgoCharm_Bitset.java:214)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:164)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.extend(AlgoCharm_Bitset.java:182)
	at Charm_BitSet.AlgoCharm_Bitset.runAlgorithm(AlgoCharm_Bitset.java:109)
	at moa.core.Segment.getFCI(Segment.java:80)
	at moa.core.SlidingWindowManager.getFCI(SlidingWindowManager.java:50)
	at moa.learners.IncMine.update(IncMine.java:161)
	at java.util.Observable.notifyObservers(Observable.java:159)
	at moa.core.SlidingWindowManager.notifyIncMine(SlidingWindowManager.java:59)
	at moa.core.FixedLengthWindowManager.addInstance(FixedLengthWindowManager.java:49)
	at moa.learners.IncMine.trainOnInstanceImpl(IncMine.java:113)
	at moa.learners.AbstractLearner.trainOnInstance(AbstractLearner.java:119)
	at moa.tasks.LearnModel.doMainTask(LearnModel.java:88)
	at moa.tasks.MainTask.doTaskImpl(MainTask.java:50)
	at moa.tasks.AbstractTask.doTask(AbstractTask.java:57)
	at moa.tasks.TaskThread.run(TaskThread.java:76)
